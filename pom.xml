<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.algonquincollege.cst8277</groupId>
  <artifactId>rest-orderSystem</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>20F_GroupProject_GroupName</name>
  <description>REST Order System</description>

  <!-- why is everything a property? Because hard-coded values become part 
    of Maven's immutable Model object and then their contents can't be changed. 
    However, if the value is set in a user-defined property BEFORE the Model 
    object is created, then it is possible to do: mvn clean compile -Dfoo.bar.version=1.2.3 
    in order to (say for example) test out a newer version of some dependency 
    without having to change the pom.xml.
  -->
  <properties>
    <!-- maven properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
    <maven.war.plugin.version>3.3.1</maven.war.plugin.version>
    <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M4</maven.surefire.plugin.version>
    <maven.site.plugin.version>3.8.2</maven.site.plugin.version>
    <maven.project.info.reports.plugin.version>3.0.0</maven.project.info.reports.plugin.version>
    <failOnMissingWebXml>false</failOnMissingWebXml>
        
    <!-- code properties -->
    <slf4j.version>1.7.29</slf4j.version>
    <logback.version>1.2.3</logback.version>
    <h2.version>1.4.200</h2.version>
    <jakarta.transaction-api.version>1.3.3</jakarta.transaction-api.version>
    <jakarta.enterprise.cdi-api.version>2.0.2</jakarta.enterprise.cdi-api.version>
    <jakarta.security.enterprise.version>1.0.1</jakarta.security.enterprise.version>
    <jackson.version>2.10.2</jackson.version>
    <jersey.version>2.29</jersey.version>
    <jersey.extensions.version>2.29.1</jersey.extensions.version>
    <eclipse.microprofile.version>[1.0,2)</eclipse.microprofile.version>
    <jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
    <jakarta.servlet-api.version>4.0.2</jakarta.servlet-api.version>
    <jakarta.persistence.version>2.2.3</jakarta.persistence.version>
    <eclipselink.version>2.7.7</eclipselink.version>
        
    <!-- test properties -->
    <junit.jupiter.version>5.6.0</junit.jupiter.version>
    <org.hamcrest.version>2.2</org.hamcrest.version>

  </properties>

  <dependencies>
    <!-- code dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>jul-to-slf4j</artifactId>
	    <version>${slf4j.version}</version>
	</dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <version>${jakarta.annotation-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.transaction</groupId>
      <artifactId>jakarta.transaction-api</artifactId>
      <version>${jakarta.transaction-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <version>${jakarta.enterprise.cdi-api.version}</version>
      <scope>provided</scope>
    </dependency>
	<dependency>
	  <groupId>jakarta.servlet</groupId>
	  <artifactId>jakarta.servlet-api</artifactId>
	  <version>${jakarta.servlet-api.version}</version>
	  <scope>provided</scope>
	</dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>jakarta.persistence</artifactId>
      <version>${jakarta.persistence.version}</version>
    </dependency>
        <dependency>
      <groupId>jakarta.security.enterprise</groupId>
      <artifactId>jakarta.security.enterprise-api</artifactId>
      <version>${jakarta.security.enterprise.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.soteria</groupId>
      <artifactId>jakarta.security.enterprise</artifactId>
      <version>${jakarta.security.enterprise.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.config</groupId>
      <artifactId>microprofile-config-api</artifactId>
      <version>${eclipse.microprofile.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.openapi</groupId>
      <artifactId>microprofile-openapi-api</artifactId>
      <version>${eclipse.microprofile.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey.extensions.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>jakarta.inject</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <!-- Eclipselink does have a more useful all-in-one artifact,
         but it breaks Java 9(+) Module rules by including some
         of the same classes as the (above) dependency org.eclipse.persistence
         which results in the very annoying error: 'java.persistence' in more than one module
    -->
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.antlr</artifactId>
      <version>${eclipselink.version}</version>
    </dependency>
      <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.asm</artifactId>
      <version>${eclipselink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.core</artifactId>
      <version>${eclipselink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.jpa</artifactId>
      <version>${eclipselink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
      <version>${eclipselink.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.extension</artifactId>
      <version>${eclipselink.version}</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>
    
    <!-- test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${org.hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>${org.hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>jakarta.inject</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${jersey.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>jakarta.inject</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>${maven.compiler.release}</release>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <testFailureIgnore>true</testFailureIgnore>
          <includes>
            <include>**/*TestSuite.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven.site.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven.project.info.reports.plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

</project>